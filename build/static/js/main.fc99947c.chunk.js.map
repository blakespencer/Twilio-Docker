{"version":3,"sources":["components/NavBar.js","components/Content.js","components/Form.js","components/SMS.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","react_default","a","createElement","id","className","style","color","userInfo","name","Content","state","firstMessage","positive","negative","handleChange","_callee","value","type","data","regenerator_default","wrap","_context","prev","next","userId","_this","sentence","fetch","method","headers","Content-Type","body","JSON","stringify","setState","Object","defineProperty","t0","console","error","stop","handleSubmit","_callee2","number","item","message","res","responseMessage","_context2","encodeURI","replace","concat","sent","json","log","_this$props$sentences","slicedToArray","this","sentences","Form_Form","length","SMS_SMS","assign","Component","Form","evt","target","handleClick","getAttribute","_this2","_this$state","onSubmit","preventDefault","Input","onChange","pattern","required","placeholder","onClick","SMS","_this$state2","isEdit1","isEdit2","isEdit3","_this$props","_this$state3","AutosizeInput_default","backgroundColor","Login","App","resSentence","Content_Content","Login_Login","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc99947c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function NavBar(props) {\n  return (\n    <div id=\"navbar\">\n      <i className=\"far fa-square\" style={{ color: 'white' }} />\n      <div>{props.userInfo && props.userInfo.name}</div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Form, SMS } from './';\n\nexport default class Content extends Component {\n  state = {\n    firstMessage: '',\n    positive: '',\n    negative: '',\n  };\n\n  componentDidMount() {\n    const [firstMessage, positive, negative] = this.props.sentences;\n    this.setState({\n      firstMessage: firstMessage[0],\n      positive: positive[0],\n      negative: negative[0],\n    });\n  }\n\n  handleChange = async (name, value, type) => {\n    try {\n      const data = { userId: this.props.userId, type, sentence: value };\n      await fetch('/api/sentences', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      this.setState({\n        [name]: value,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  handleSubmit = async (number, item, name) => {\n    number = encodeURI(number);\n\n    const message = this.state.firstMessage\n      .replace('<first name>', name)\n      .replace('<productType>', item);\n    const positive = this.state.positive.replace('<productType>', item);\n    const negative = this.state.negative.replace('<productType>', item);\n    try {\n      const res = await fetch(\n        `api/send_sms?number=${number}&message=${message}&positive=${positive}&negative=${negative}`\n      );\n      const responseMessage = await res.json();\n      console.log(responseMessage);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"content\">\n        <Form handleSubmit={this.handleSubmit} />\n        {this.state.firstMessage.length ? (\n          <SMS {...this.state} handleChange={this.handleChange} />\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Menu, Input } from 'semantic-ui-react';\n\nexport default class Form extends Component {\n  state = {\n    number: '',\n    item: 'lime',\n    name: '',\n  };\n\n  handleChange = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  handleClick = evt => {\n    const name = evt.target.getAttribute('name');\n    const value = evt.target.getAttribute('value');\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { number, item, name } = this.state;\n    return (\n      <form\n        id=\"form\"\n        onSubmit={evt => {\n          evt.preventDefault();\n          this.props.handleSubmit(number, item, name);\n          this.setState({ number: '', name: '' });\n        }}\n      >\n        <div className=\"form-input\">\n          <label className=\"form-label\">\n            <i className=\"fas fa-mobile-alt\" /> Enter Customer Phone Number\n          </label>\n          <Input\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n            required\n            placeholder=\"123-456-7890\"\n          />\n        </div>\n        <div className=\"form-input\">\n          <label className=\"form-label\">\n            <i className=\"fas fa-cocktail\" /> Product Type\n          </label>\n          <div id=\"options\">\n            <div\n              className={\n                item === 'lime' ? 'focused item left' : 'not-focused item left'\n              }\n              id=\"item-left\"\n              name=\"item\"\n              value=\"lime\"\n              onClick={this.handleClick}\n            >\n              Lime\n            </div>\n            <div\n              className={\n                item === 'cherry'\n                  ? 'focused item middle'\n                  : 'not-focused item middle'\n              }\n              name=\"item\"\n              value=\"cherry\"\n              onClick={this.handleClick}\n            >\n              Cherry\n            </div>\n            <div\n              id=\"item-right\"\n              className={\n                item === 'vanilla'\n                  ? 'focused item right'\n                  : 'not-focused item right'\n              }\n              name=\"item\"\n              value=\"vanilla\"\n              onClick={this.handleClick}\n            >\n              Vanilla\n            </div>\n          </div>\n        </div>\n        <div className=\"form-input\">\n          <label className=\"form-label\">\n            <i className=\"fas fa-user-edit\" /> Customer Name\n          </label>\n          <Input\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            placeholder=\"Blake\"\n            required\n          />\n        </div>\n        <button className=\"button\" type=\"submit\">\n          Send SMS\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport AutosizeInput from 'react-input-autosize';\n\nexport default class SMS extends Component {\n  state = {\n    firstMessage: '',\n    positive: '',\n    negative: '',\n  };\n\n  componentDidMount() {\n    const { firstMessage, positive, negative } = this.props;\n    this.setState({\n      firstMessage,\n      positive,\n      negative,\n    });\n  }\n\n  handleChange = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  handleClick = async evt => {\n    const { firstMessage, positive, negative } = this.state;\n    let { isEdit1, isEdit2, isEdit3 } = this.state;\n    if (evt.target.name === 'isEdit1') {\n      isEdit1 = !isEdit1;\n      this.props.handleChange('firstMessage', firstMessage, 0);\n    } else if (evt.target.name === 'isEdit2') {\n      isEdit2 = !isEdit2;\n      this.props.handleChange('positive', positive, 1);\n    } else if (evt.target.name === 'isEdit3') {\n      isEdit3 = !isEdit3;\n      this.props.handleChange('negative', negative, 2);\n    }\n\n    this.setState({\n      isEdit1,\n      isEdit2,\n      isEdit3,\n    });\n  };\n\n  render() {\n    const {\n      positive,\n      negative,\n      firstMessage,\n      isEdit1,\n      isEdit2,\n      isEdit3,\n    } = this.state;\n    return (\n      <div id=\"sms\">\n        <label>First Automated Message</label>\n        {isEdit1 ? (\n          <div className=\"sms\">\n            <AutosizeInput\n              name=\"firstMessage\"\n              value={firstMessage}\n              onChange={this.handleChange}\n            />\n            <button\n              onClick={this.handleClick}\n              name=\"isEdit1\"\n              style={{ backgroundColor: 'pink' }}\n            >\n              Done!\n            </button>\n          </div>\n        ) : (\n          <div className=\"sms\">\n            <div>{firstMessage}</div>\n            <button onClick={this.handleClick} name=\"isEdit1\">\n              Edit\n            </button>\n          </div>\n        )}\n        <label>\n          If Positive Response <i className=\"far fa-smile\" />\n        </label>\n        {isEdit2 ? (\n          <div className=\"sms\">\n            <AutosizeInput\n              name=\"positive\"\n              value={positive}\n              onChange={this.handleChange}\n            />\n            <button\n              onClick={this.handleClick}\n              name=\"isEdit2\"\n              style={{ backgroundColor: 'pink' }}\n            >\n              Done!\n            </button>\n          </div>\n        ) : (\n          <div className=\"sms\">\n            <div>{positive}</div>\n            <button onClick={this.handleClick} name=\"isEdit2\">\n              Edit\n            </button>\n          </div>\n        )}\n        <label>\n          If Negative Response <i className=\"far fa-frown\" />\n        </label>\n        {isEdit3 ? (\n          <div className=\"sms\">\n            <AutosizeInput\n              name=\"negative\"\n              value={negative}\n              onChange={this.handleChange}\n            />\n            <button\n              onClick={this.handleClick}\n              name=\"isEdit3\"\n              style={{ backgroundColor: 'pink' }}\n            >\n              Done!\n            </button>\n          </div>\n        ) : (\n          <div className=\"sms\">\n            <div>{negative}</div>\n            <button onClick={this.handleClick} name=\"isEdit3\">\n              Edit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Login extends Component {\n  state = {\n    name: '',\n  };\n\n  handleChange = evt => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n    });\n  };\n  render() {\n    const { name } = this.state;\n    return (\n      <form\n        id=\"login-form\"\n        onSubmit={evt => this.props.handleSubmit(evt, name)}\n      >\n        <label>Login with your name</label>\n        <input\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n    );\n  }\n}\n","import './App.css';\nimport React, { Component } from 'react';\nimport { NavBar, Content, Login } from './components';\n\nexport default class App extends Component {\n  state = {};\n  handleSubmit = async (evt, name) => {\n    evt.preventDefault();\n    const res = await fetch(`/api/login?name=${name}`);\n    const userInfo = await res.json();\n    const resSentence = await fetch(`/api/sentences?user_id=${userInfo.id}`);\n    const sentences = await resSentence.json();\n    this.setState({\n      userInfo,\n      sentences,\n    });\n  };\n  render() {\n    const { userInfo, sentences } = this.state;\n    return (\n      <div className=\"App\">\n        <NavBar userInfo={userInfo} />\n        {userInfo ? (\n          <Content sentences={sentences} userId={userInfo.id} />\n        ) : (\n          <Login handleSubmit={this.handleSubmit} />\n        )}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}